---
import type { CollectionEntry } from "astro:content";

type Props = {
  entry: CollectionEntry<"logs"> | CollectionEntry<"projects">;
};

const { entry } = Astro.props;
const isProject = entry.collection === "projects";
---

<a
  href={`/${entry.collection}/${entry.slug}`}
  class="relative group flex flex-nowrap py-4 px-5 pr-12 rounded-lg border border-black/15 dark:border-white/20 hover:bg-black/5 dark:hover:bg-white/5 hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out"
>
  <div class="flex flex-col flex-1 space-y-2 truncate">
    <div class="font-semibold text-base">{entry.data.title}</div>
    <div class="text-sm leading-relaxed">{entry.data.description}</div>

    {isProject && entry.data.stack?.length > 0 && (
      <ul class="flex flex-wrap gap-1.5 text-xs text-stone-500 dark:text-stone-400 mt-1">
        {entry.data.stack.map((tech) => (
          <li class="px-2 py-0.5 rounded-full bg-black/5 dark:bg-white/10 whitespace-nowrap">
            {tech}
          </li>
        ))}
      </ul>
    )}

    {isProject && entry.data.highlights?.length > 0 && (
      <ul class="pl-3 border-l border-black/10 dark:border-white/10 text-xs text-stone-600 dark:text-stone-400 space-y-1.5 mt-2">
        {entry.data.highlights.map((point) => (
          <li>{point}</li>
        ))}
      </ul>
    )}
  </div>

  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    class="absolute top-1/2 right-3 -translate-y-1/2 size-5 stroke-2 fill-none stroke-current"
  >
    <line
      x1="5"
      y1="12"
      x2="19"
      y2="12"
      class="translate-x-3 group-hover:translate-x-0 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 ease-in-out"
    />
    <polyline
      points="12 5 19 12 12 19"
      class="-translate-x-1 group-hover:translate-x-0 transition-transform duration-300 ease-in-out"
    />
  </svg>
</a>
